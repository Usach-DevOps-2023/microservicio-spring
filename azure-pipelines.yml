trigger:
- feature-ms-rodrigoCortes-mensaje

pool:
  vmImage: ubuntu-latest

steps:

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'usach-devops-2023'
    projectKey: 'Usach-DevOps-2023_microservicio-spring'
    projectName: 'microservicio-spring'
  displayName: 'SonarCloud Prepare'

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build jacocoTestReport' #jacocoTestCoverageVerification
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.3'
    spotBugsAnalysis: false
  displayName: Build

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: 'build/reports/jacoco/test/jacocoTestReport.xml'
    reportDirectory: 'build/reports/jacoco/test'
    failIfCoverageEmpty: true
  displayName: 'Publish code coverage results'

- script: |
    wget -O apache-jmeter-5.4.1.tgz https://downloads.apache.org/jmeter/binaries/apache-jmeter-5.4.1.tgz
    tar -xzf apache-jmeter-5.4.1.tgz
    rm apache-jmeter-5.4.1.tgz
  displayName: 'Download JMeter'

- script: |
    ./apache-jmeter-5.4.1/bin/jmeter.sh -n -t src/test/jmx/PerformanceTesting.jmx -l src/test/jmx/results.jtl
  displayName: 'Run JMeter Tests'

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'src/test/jmx/results.jtl'
    searchFolder: 'src/test/jmx'