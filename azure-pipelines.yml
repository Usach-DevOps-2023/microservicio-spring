trigger:
- feature-ms-rodrigoCortes-mensaje

pool:
  vmImage: ubuntu-latest

steps:

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'usach-devops-2023'
    projectKey: 'Usach-DevOps-2023_microservicio-spring'
    projectName: 'microservicio-spring'
  displayName: 'SonarCloud Prepare'

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build jacocoTestReport' #jacocoTestCoverageVerification
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.3'
    spotBugsAnalysis: false
  displayName: Build

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: 'build/reports/jacoco/test/jacocoTestReport.xml'
    reportDirectory: 'build/reports/jacoco/test'
    failIfCoverageEmpty: true
  displayName: 'Publish code coverage results'

- task: DownloadSecureFile@1
  displayName: 'Download JMeter'
  name: jmeterDownload
  inputs:
    secureFile: 'jmeter.zip'

- task: ExtractFiles@1
  displayName: 'Extract JMeter'
  inputs:
    archiveFilePatterns: '$(jmeterDownload.secureFilePath)'
    destinationFolder: '$(Agent.TempDirectory)/jmeter'

- task: PowerShell@2
  displayName: 'Set JMeter Path'
  inputs:
    targetType: 'inline'
    script: |
      $env:JMETER_HOME = '$(Agent.TempDirectory)/jmeter/apache-jmeter-5.4.1'
      $env:PATH += ";$env:JMETER_HOME/bin"
- script: |
    jmeter -n -t src/test/jmx/PerformanceTesting.jmx -l $(Build.ArtifactStagingDirectory)/results.jtl
  displayName: 'Run JMeter Tests'
- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(Build.ArtifactStagingDirectory)/results.jtl'
    searchFolder: '$(Build.ArtifactStagingDirectory)'